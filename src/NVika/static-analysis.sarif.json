{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "1.3.1.0",
        "fileVersion": "1.3.1.60616",
        "semanticVersion": "1.3.1",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0649",
          "level": "warning",
          "message": "Field 'Program._commands' is never assigned to, and will always have its default value null",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Prog/Github/vika/src/NVika/Program.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 45,
                  "endLine": 35,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 4
          }
        },
        {
          "ruleId": "S1450",
          "level": "note",
          "message": "Remove the \"_allowedExtensions\" field and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Prog/Github/vika/src/NVika/Parsers/ReportParserBase.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 4
          }
        },
        {
          "ruleId": "CC0021",
          "level": "warning",
          "message": "Use 'nameof(Issue)' instead of specifying the program element name.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Prog/Github/vika/src/NVika/Parsers/InspectCodeParser.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 43,
                  "endLine": 32,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0014",
          "level": "note",
          "message": "You can use a ternary operator.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Prog/Github/vika/src/NVika/Parsers/SarifParser.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 13,
                  "endLine": 33,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 4
          }
        },
        {
          "ruleId": "CC0021",
          "level": "warning",
          "message": "Use 'nameof(Issue)' instead of specifying the program element name.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Prog/Github/vika/src/NVika/Parsers/InspectCodeParser.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 59,
                  "endLine": 45,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0021",
          "level": "warning",
          "message": "Use 'nameof(Offset)' instead of specifying the program element name.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Prog/Github/vika/src/NVika/Parsers/InspectCodeParser.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 59,
                  "endLine": 49,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0021",
          "level": "warning",
          "message": "Use 'nameof(Name)' instead of specifying the program element name.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Prog/Github/vika/src/NVika/Parsers/InspectCodeParser.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 53,
                  "endLine": 54,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CC0014": {
          "id": "CC0014",
          "shortDescription": "Use ternary operator",
          "defaultLevel": "note",
          "helpUri": "https://code-cracker.github.io/diagnostics/CC0014.html",
          "properties": {
            "category": "Style",
            "isEnabledByDefault": true
          }
        },
        "CC0021": {
          "id": "CC0021",
          "shortDescription": "Use nameof",
          "fullDescription": "In C#6 the nameof() operator should be used to specify the name of a program element instead of a string literal as it produce code that is easier to refactor.",
          "defaultLevel": "warning",
          "helpUri": "https://code-cracker.github.io/diagnostics/CC0021.html",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "CS0649": {
          "id": "CS0649",
          "shortDescription": "Field is never assigned to, and will always have its default value",
          "defaultLevel": "warning",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1450": {
          "id": "S1450",
          "shortDescription": "Private fields only used as local variables in methods should become local variables",
          "fullDescription": "When the value of a private field is always assigned to in a class' methods before being read, then it is not being used to store class information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.",
          "defaultLevel": "note",
          "helpUri": "http://vs.sonarlint.org/rules/index.html#version=1.16.0&ruleId=S1450",
          "properties": {
            "category": "Maintainability",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        }
      }
    }
  ]
}