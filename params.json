{
  "name": "Vika",
  "tagline": "Visual Interpreter of Kooky Analysis",
  "body": "# ![Project icon](resources/icon.png) vika\r\n\r\nVisual Interpreter of Kooky Analysis.\r\nAlso means 'bug' in Finnish.\r\n\r\n[![Licence Apache 2](https://img.shields.io/badge/licence-Apache%202-blue.svg)](https://github.com/laedit/vika/blob/master/LICENSE) \r\n[![AppVeyor build status](https://img.shields.io/appveyor/ci/laedit/vika.svg?label=build+windows)](https://ci.appveyor.com/project/laedit/vika) \r\n[![Travis CI build Status](https://img.shields.io/travis/laedit/vika.svg?label=build+linux)](https://travis-ci.org/laedit/vika) \r\n[![Coverage Status](https://coveralls.io/repos/laedit/vika/badge.svg)](https://coveralls.io/r/laedit/vika) \r\n[![Chocolatey](https://img.shields.io/chocolatey/v/nvika.svg)](https://chocolatey.org/packages/nvika) \r\n[![Join the chat at https://gitter.im/laedit/vika](https://badges.gitter.im/laedit/vika.svg)](https://gitter.im/laedit/vika?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n## What it is\r\nRight now it's just a tiny tool which parse analysis reports and send messages to the build server, or in console if it's not executed on a build server.\r\n\r\nYou can use it like this: `NVika parsereport \"inspectcodereport.xml\"`\r\n\r\nIt is possible to process several reports at the same time: `NVika parsereport report1.xml report2.xml`\r\n\r\n### additional params:\r\n - `--debug`: active the debug category on logger, useful for debugging\r\n - `--includesource`: include the report source name in messages\r\n - `--treatwarningsaserrors`: treat all warnings as errors\r\n\r\n### exit codes:\r\n - 0: OK\r\n - 1: unknown error\r\n - 2: report not found\r\n - 3: exception during report loading\r\n - 4: no parser found for the current report\r\n - 5: issue(s) with error severity was found\r\n\r\n## Analysis tools\r\n### Supported\r\n - [InspectCode](https://chocolatey.org/packages/resharper-clt): example of usage `inspectcode /o=\"inspectcodereport.xml\" \"Vika.sln\"`\r\n - Analyzers producing [SARIF](http://sarifweb.azurewebsites.net) format, like Roslyn analyzers: for those you need to add an `ErrorLog` node in your `csproj` containing the path of the report, or an `/errorlog:<reportPath>` switch for `csc`; See [NVika.csproj](https://github.com/laedit/vika/blob/master/src/NVika/NVika.csproj)\r\n - [FxCop](https://msdn.microsoft.com/en-us/library/bb429476(v=vs.80).aspx): example of usage `fxcopcmd /file:NVika.dll /out:FxCopResults.xml`. Or activate Code Analysis in the corresponding tab of your project properties in Visual Studio.\r\n - [Mono.Gendarme](http://www.mono-project.com/docs/tools+libraries/tools/gendarme/): example of usafe `gendarme --xml GendarmeReport.xml \"\\GendarmeTest.exe\"`\r\n\r\n### To come\r\n - [StyleCop](https://github.com/laedit/vika/issues/7)\r\n - NDepend?\r\n - DupFinder (if someone wants it reaaaally bad)\r\n - [CPD](https://github.com/laedit/vika/issues/27)\r\n - [CPPCheck](https://github.com/laedit/vika/issues/26)\r\n \r\n## Build servers\r\n### Supported\r\n  - [AppVeyor](http://appveyor.com)\r\n![AppVeyor example](resources/AppVeyor.png)\r\n  \r\n### To come\r\n - [TeamCity](https://github.com/laedit/vika/issues/4)?\r\n - [ContinuaCI](https://github.com/laedit/vika/issues/3)?\r\n - [MyGet](https://github.com/laedit/vika/issues/5)?\r\n\r\nI really wondering if there is any value to supporting these three, because there doesn't support to add build message like AppVeyor but only log message.\r\nAnd they support custom HTML report, so an xslt transformation is enough.\r\n\r\n## What it will be\r\nA website will be added for displaying a nice and shiny aggregated report from all source to a dedicated page for each GitHub project.\r\n\r\nThere also will be a solution to upload a temporary report stored for a week.\r\n\r\nAnd the client may push reports through the website public API.\r\n\r\n## Contributing\r\nAll contributions are welcome, please read our [contributing guide](CONTRIBUTING.md).\r\n\r\n## Attribution\r\nIcon: [Report](https://thenounproject.com/term/report/84881/) designed by [Nataliia Lytvyn](https://thenounproject.com/natashenkalitvin/) from [The Noun Project](https://thenounproject.com/).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}